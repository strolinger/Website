name: daily-site-refresh

on:
  schedule:
    - cron: '0 11 * * 1-5'   # run every weekday at 6am Central (adjust as you like)
  workflow_dispatch:          # allow manual runs

jobs:
  refresh:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # <-- required so the job can commit the new PNG

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Playwright (Chromium)
        run: npx playwright install --with-deps chromium

      - name: Snapshot Finviz heatmap → docs/snapshots/heatmap-snapshot.png
        shell: bash
        run: |
          node - <<'JS'
          const fs = require('fs');
          const path = require('path');
          const { chromium } = require('playwright');

          (async () => {
            const outDir  = path.join('docs', 'snapshots');
            const outFile = path.join(outDir, 'heatmap-snapshot.png');
            fs.mkdirSync(outDir, { recursive: true });

            const browser = await chromium.launch({
              headless: true,
              args: ['--no-sandbox','--disable-setuid-sandbox']
            });
            const ctx = await browser.newContext({
              viewport: { width: 1600, height: 1100 },
              userAgent:
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123 Safari/537.36'
            });
            const page = await ctx.newPage();

            // Block ad/analytics calls that prevent “network idle”
            await ctx.route('**/*', (route) => {
              const u = route.request().url();
              const block = [
                'doubleclick','googlesyndication','googletagmanager',
                'adservice.google','analytics','scorecardresearch','facebook'
              ].some(s => u.includes(s));
              if (block) return route.abort();
              return route.continue();
            });

            try {
              await page.goto('https://finviz.com/map.ashx', { waitUntil: 'load', timeout: 120000 });

              // Try to accept cookie banners if present
              try {
                const btn = await page.waitForSelector(
                  'button:has-text("Agree"), button:has-text("I Agree"), #onetrust-accept-btn-handler',
                  { timeout: 5000 }
                );
                if (btn) await btn.click();
              } catch {}

              // Wait for something that looks like the map
              const sel = ['canvas','img[src*="map.ashx"]','.f-map','.map','#map','#root'].join(', ');
              await page.waitForSelector(sel, { timeout: 60000 });

              await page.waitForTimeout(2500); // let the map settle
              await page.screenshot({ path: outFile, fullPage: true });
              console.log('Wrote:', outFile);
              await browser.close();
            } catch (err) {
              console.error('Heatmap snapshot failed:', err);
              await browser.close();
              process.exit(1);
            }
          })();
          JS

      - name: Commit updated snapshot
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/snapshots/heatmap-snapshot.png
          git commit -m "Update heatmap snapshot" || echo "No changes"
          git push
